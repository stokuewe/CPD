from __future__ import annotations

from typing import Any, Literal, Protocol, Sequence, runtime_checkable

Params = Sequence[Any]
Row = dict[str, Any]


@runtime_checkable
class StorageAdapter(Protocol):
    backend: Literal["sqlite", "mssql"]

    def connect(self) -> None: ...
    def close(self) -> None: ...
    def begin(self) -> None: ...
    def commit(self) -> None: ...
    def rollback(self) -> None: ...
    def execute(self, sql: str, params: Params = ()) -> Any: ...
    def executemany(self, sql: str, seq_params: Sequence[Params]) -> Any: ...
    def query(self, sql: str, params: Params = ()) -> list[Row]: ...
    def execute_script(self, sql: str) -> None: ...
    def supports_feature(self, feature: str) -> bool: ...


__all__ = ["StorageAdapter", "Params", "Row"]
